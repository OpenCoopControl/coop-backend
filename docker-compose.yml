services:
  mongodb:
    image: mongo:latest
    container_name: ${MONGO_CONTAINER_NAME:-mongodb}
    restart: always
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-coop-control}
    volumes:
      - mongodb_data:/data/db
    networks:
      - coop-network

  # You can uncomment this service if you want a MongoDB UI
  # mongo-express:
  #   image: mongo-express:latest
  #   container_name: mongo-express
  #   restart: always
  #   ports:
  #     - "${MONGO_EXPRESS_PORT:-8081}:8081"
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME:-root}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD:-password}
  #     - ME_CONFIG_MONGODB_SERVER=mongodb
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - coop-network

  # Uncomment this if you want to containerize your NestJS app too
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: coop-api
  #   restart: always
  #   ports:
  #     - "${API_PORT:-3000}:3000"
  #   environment:
  #     - MONGODB_URI=mongodb://${MONGO_USERNAME:-root}:${MONGO_PASSWORD:-password}@mongodb:27017/${MONGO_DATABASE:-coop-control}?authSource=admin
  #     - JWT_SECRET=${JWT_SECRET:-your-secret-key}
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - coop-network

volumes:
  mongodb_data:
    driver: local

networks:
  coop-network:
    driver: bridge